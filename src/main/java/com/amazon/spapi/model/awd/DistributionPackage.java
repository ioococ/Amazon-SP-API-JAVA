/*
 * The Selling Partner API for Amazon Warehousing and Distribution
 * The Selling Partner API for Amazon Warehousing and Distribution (AWD) provides programmatic access to information about AWD shipments and inventory.
 *
 * OpenAPI spec version: 2024-05-09
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.amazon.spapi.model.awd;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Objects;

/**
 * Represents an AWD distribution package.
 */
@ApiModel(description = "Represents an AWD distribution package.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-12-13T16:08:01.615+08:00")
public class DistributionPackage {
  @SerializedName("contents")
  private DistributionPackageContents contents = null;

  @SerializedName("measurements")
  private MeasurementData measurements = null;

  @SerializedName("type")
  private DistributionPackageType type = null;

  public DistributionPackage contents(DistributionPackageContents contents) {
    this.contents = contents;
    return this;
  }

   /**
   * The contents appropriate for the type.
   * @return contents
  **/
  @ApiModelProperty(required = true, value = "The contents appropriate for the type.")
  public DistributionPackageContents getContents() {
    return contents;
  }

  public void setContents(DistributionPackageContents contents) {
    this.contents = contents;
  }

  public DistributionPackage measurements(MeasurementData measurements) {
    this.measurements = measurements;
    return this;
  }

   /**
   * Measurements of a package, including weight, volume, and dimensions.
   * @return measurements
  **/
  @ApiModelProperty(required = true, value = "Measurements of a package, including weight, volume, and dimensions.")
  public MeasurementData getMeasurements() {
    return measurements;
  }

  public void setMeasurements(MeasurementData measurements) {
    this.measurements = measurements;
  }

  public DistributionPackage type(DistributionPackageType type) {
    this.type = type;
    return this;
  }

   /**
   * Type of distribution package.
   * @return type
  **/
  @ApiModelProperty(required = true, value = "Type of distribution package.")
  public DistributionPackageType getType() {
    return type;
  }

  public void setType(DistributionPackageType type) {
    this.type = type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DistributionPackage distributionPackage = (DistributionPackage) o;
    return Objects.equals(this.contents, distributionPackage.contents) &&
        Objects.equals(this.measurements, distributionPackage.measurements) &&
        Objects.equals(this.type, distributionPackage.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contents, measurements, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DistributionPackage {\n");

    sb.append("    contents: ").append(toIndentedString(contents)).append("\n");
    sb.append("    measurements: ").append(toIndentedString(measurements)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

