/*
 * Selling Partner API for Feeds
 * The Selling Partner API for Feeds lets you upload data to Amazon on behalf of a selling partner.
 *
 * OpenAPI spec version: 2020-09-04
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.amazon.spapi.api;

import com.amazon.spapi.client.ApiException;
import com.amazon.spapi.config.AmazonAuthorConfig;
import com.amazon.spapi.documents.UploadDocument;
import com.amazon.spapi.enums.EndpointsEnum;
import com.amazon.spapi.model.feeds.*;
import lombok.var;
import org.junit.Ignore;
import org.junit.Test;
import org.threeten.bp.OffsetDateTime;

import java.io.*;
import java.nio.charset.StandardCharsets;
import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

/**
 * API tests for FeedsApi
 * 使用Demo文档
 * https://github.com/amzn/selling-partner-api-docs/blob/main/references/feeds-api/feeds_2021-06-30.md
 */
@Ignore
public class FeedsApiTest {



    static String refreshtoken="***";
    static EndpointsEnum endpointsEnum = EndpointsEnum.US;
    static List<String> marketplaceIds= Arrays.asList(endpointsEnum.getMarketplaceId());
    AmazonAuthorConfig authorConfig=new AmazonAuthorConfig(refreshtoken, endpointsEnum.getRegion(),endpointsEnum.getEndpoint());

    private final FeedsApi api = FeedsApi.amazonAuthorizationApi(authorConfig);

   static String sku="3YYYYYYYYYYYr-HB-BAG";
   @Test
   public void uploadProduct() throws ApiException {
       String feedData =
               "<?xml version=\"1.0\" encoding=\"UTF-8\"?><AmazonEnvelope xsi:noNamespaceSchemaLocation=\"amzn-envelope.xsd\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><Header><DocumentVersion>1.01</DocumentVersion><MerchantIdentifier>ListingsContentHandler</MerchantIdentifier></Header><MessageType>Product</MessageType><Message><MessageID>1</MessageID><OperationType>Update</OperationType><Product><SKU>26110-PARENT</SKU><Condition><ConditionType>New</ConditionType></Condition><DescriptionData><Title>TestBrand 测试品牌 短袖T恤 26110 </Title><Brand>TestBrand 测试品牌</Brand><Description>TestCompany全新推出更具潮流气息的短袖POLO衫,时尚简约的款式,考究精致的版型,质感和颜色同时抢眼夺目,让您英姿飒爽,尽显帅气风采</Description><Manufacturer>TestCompany</Manufacturer><RecommendedBrowseNode>215432051</RecommendedBrowseNode><RecommendedBrowseNode>2154531051</RecommendedBrowseNode></DescriptionData><ProductData><Clothing><VariationData><Parentage>parent</Parentage><VariationTheme>SizeColor</VariationTheme></VariationData><ClassificationData><ClothingType>Shirt</ClothingType><Department>男式</Department><StyleKeywords>花纹</StyleKeywords><OuterMaterial>棉</OuterMaterial><CountryOfOrigin>cn</CountryOfOrigin><RegionOfOrigin>中国</RegionOfOrigin></ClassificationData></Clothing></ProductData></Product></Message><Message><MessageID>2</MessageID><OperationType>Update</OperationType><Product><SKU>26110-heise-0M</SKU><Condition><ConditionType>New</ConditionType></Condition><DescriptionData><Title>TestBrand 测试品牌 短袖T恤 26110 黑色 M</Title><Brand>TestBrand 测试品牌</Brand><Description>TestCompany全新推出更具潮流气息的短袖POLO衫,时尚简约的款式,考究精致的版型,质感和颜色同时抢眼夺目,让您英姿飒爽,尽显帅气风采</Description><Manufacturer>TestCompany</Manufacturer><RecommendedBrowseNode>215432051</RecommendedBrowseNode><RecommendedBrowseNode>2154531051</RecommendedBrowseNode></DescriptionData><ProductData><Clothing><VariationData><Parentage>child</Parentage><Size>M</Size><Color>黑色</Color><VariationTheme>SizeColor</VariationTheme></VariationData><ClassificationData><ClothingType>Shirt</ClothingType><Department>男式</Department><StyleKeywords>花纹</StyleKeywords><ColorMap>黑色</ColorMap><OuterMaterial>棉</OuterMaterial><CountryOfOrigin>cn</CountryOfOrigin><SizeMap>170/92A</SizeMap><RegionOfOrigin>中国</RegionOfOrigin></ClassificationData></Clothing></ProductData></Product></Message><Message><MessageID>3</MessageID><OperationType>Update</OperationType><Product><SKU>26110-heise-0L</SKU><Condition><ConditionType>New</ConditionType></Condition><DescriptionData><Title>TestBrand 测试品牌 短袖T恤 26110 黑色 L</Title><Brand>TestBrand 测试品牌</Brand><Description>TestCompany全新推出更具潮流气息的短袖POLO衫,时尚简约的款式,考究精致的版型,质感和颜色同时抢眼夺目,让您英姿飒爽,尽显帅气风采</Description><Manufacturer>TestCompany</Manufacturer><RecommendedBrowseNode>215432051</RecommendedBrowseNode><RecommendedBrowseNode>2154531051</RecommendedBrowseNode></DescriptionData><ProductData><Clothing><VariationData><Parentage>child</Parentage><Size>L</Size><Color>黑色</Color><VariationTheme>SizeColor</VariationTheme></VariationData><ClassificationData><ClothingType>Shirt</ClothingType><Department>男式</Department><StyleKeywords>花纹</StyleKeywords><ColorMap>黑色</ColorMap><OuterMaterial>棉</OuterMaterial><CountryOfOrigin>cn</CountryOfOrigin><SizeMap>175/96A</SizeMap><RegionOfOrigin>中国</RegionOfOrigin></ClassificationData></Clothing></ProductData></Product></Message><Message><MessageID>4</MessageID><OperationType>Update</OperationType><Product><SKU>26110-heise-X1L</SKU><Condition><ConditionType>New</ConditionType></Condition><DescriptionData><Title>TestBrand 测试品牌 短袖T恤 26110 黑色 XL</Title><Brand>TestBrand 测试品牌</Brand><Description>TestCompany全新推出更具潮流气息的短袖POLO衫,时尚简约的款式,考究精致的版型,质感和颜色同时抢眼夺目,让您英姿飒爽,尽显帅气风采</Description><Manufacturer>TestCompany</Manufacturer><RecommendedBrowseNode>215432051</RecommendedBrowseNode><RecommendedBrowseNode>2154531051</RecommendedBrowseNode></DescriptionData><ProductData><Clothing><VariationData><Parentage>child</Parentage><Size>XL</Size><Color>黑色</Color><VariationTheme>SizeColor</VariationTheme></VariationData><ClassificationData><ClothingType>Shirt</ClothingType><Department>男式</Department><StyleKeywords>花纹</StyleKeywords><ColorMap>黑色</ColorMap><OuterMaterial>棉</OuterMaterial><CountryOfOrigin>cn</CountryOfOrigin><SizeMap>180/100A</SizeMap><RegionOfOrigin>中国</RegionOfOrigin></ClassificationData></Clothing></ProductData></Product></Message><Message><MessageID>5</MessageID><OperationType>Update</OperationType><Product><SKU>26110-heise-X2L</SKU><Condition><ConditionType>New</ConditionType></Condition><DescriptionData><Title>TestBrand 测试品牌 短袖T恤 26110 黑色 XXL</Title><Brand>TestBrand 测试品牌</Brand><Description>TestCompany全新推出更具潮流气息的短袖POLO衫,时尚简约的款式,考究精致的版型,质感和颜色同时抢眼夺目,让您英姿飒爽,尽显帅气风采</Description><Manufacturer>TestCompany</Manufacturer><RecommendedBrowseNode>215432051</RecommendedBrowseNode><RecommendedBrowseNode>2154531051</RecommendedBrowseNode></DescriptionData><ProductData><Clothing><VariationData><Parentage>child</Parentage><Size>XXL</Size><Color>黑色</Color><VariationTheme>SizeColor</VariationTheme></VariationData><ClassificationData><ClothingType>Shirt</ClothingType><Department>男式</Department><StyleKeywords>花纹</StyleKeywords><ColorMap>黑色</ColorMap><OuterMaterial>棉</OuterMaterial><CountryOfOrigin>cn</CountryOfOrigin><SizeMap>185/104A</SizeMap><RegionOfOrigin>中国</RegionOfOrigin></ClassificationData></Clothing></ProductData></Product></Message><Message><MessageID>6</MessageID><OperationType>Update</OperationType><Product><SKU>26110-lanse-0M</SKU><Condition><ConditionType>New</ConditionType></Condition><DescriptionData><Title>TestBrand 测试品牌 短袖T恤 26110 兰色 M</Title><Brand>TestBrand 测试品牌</Brand><Description>TestCompany全新推出更具潮流气息的短袖POLO衫,时尚简约的款式,考究精致的版型,质感和颜色同时抢眼夺目,让您英姿飒爽,尽显帅气风采</Description><Manufacturer>TestCompany</Manufacturer><RecommendedBrowseNode>215432051</RecommendedBrowseNode><RecommendedBrowseNode>2154531051</RecommendedBrowseNode></DescriptionData><ProductData><Clothing><VariationData><Parentage>child</Parentage><Size>M</Size><Color>兰色</Color><VariationTheme>SizeColor</VariationTheme></VariationData><ClassificationData><ClothingType>Shirt</ClothingType><Department>男式</Department><StyleKeywords>花纹</StyleKeywords><ColorMap>兰色</ColorMap><OuterMaterial>棉</OuterMaterial><CountryOfOrigin>cn</CountryOfOrigin><SizeMap>170/92A</SizeMap><RegionOfOrigin>中国</RegionOfOrigin></ClassificationData></Clothing></ProductData></Product></Message><Message><MessageID>7</MessageID><OperationType>Update</OperationType><Product><SKU>26110-lanse-0L</SKU><Condition><ConditionType>New</ConditionType></Condition><DescriptionData><Title>TestBrand 测试品牌 短袖T恤 26110 兰色 L</Title><Brand>TestBrand 测试品牌</Brand><Description>TestCompany全新推出更具潮流气息的短袖POLO衫,时尚简约的款式,考究精致的版型,质感和颜色同时抢眼夺目,让您英姿飒爽,尽显帅气风采</Description><Manufacturer>TestCompany</Manufacturer><RecommendedBrowseNode>215432051</RecommendedBrowseNode><RecommendedBrowseNode>2154531051</RecommendedBrowseNode></DescriptionData><ProductData><Clothing><VariationData><Parentage>child</Parentage><Size>L</Size><Color>兰色</Color><VariationTheme>SizeColor</VariationTheme></VariationData><ClassificationData><ClothingType>Shirt</ClothingType><Department>男式</Department><StyleKeywords>花纹</StyleKeywords><ColorMap>兰色</ColorMap><OuterMaterial>棉</OuterMaterial><CountryOfOrigin>cn</CountryOfOrigin><SizeMap>175/96A</SizeMap><RegionOfOrigin>中国</RegionOfOrigin></ClassificationData></Clothing></ProductData></Product></Message><Message><MessageID>8</MessageID><OperationType>Update</OperationType><Product><SKU>26110-lanse-X1L</SKU><Condition><ConditionType>New</ConditionType></Condition><DescriptionData><Title>TestBrand 测试品牌 短袖T恤 26110 兰色 XL</Title><Brand>TestBrand 测试品牌</Brand><Description>TestCompany全新推出更具潮流气息的短袖POLO衫,时尚简约的款式,考究精致的版型,质感和颜色同时抢眼夺目,让您英姿飒爽,尽显帅气风采</Description><Manufacturer>TestCompany</Manufacturer><RecommendedBrowseNode>215432051</RecommendedBrowseNode><RecommendedBrowseNode>2154531051</RecommendedBrowseNode></DescriptionData><ProductData><Clothing><VariationData><Parentage>child</Parentage><Size>XL</Size><Color>兰色</Color><VariationTheme>SizeColor</VariationTheme></VariationData><ClassificationData><ClothingType>Shirt</ClothingType><Department>男式</Department><StyleKeywords>花纹</StyleKeywords><ColorMap>兰色</ColorMap><OuterMaterial>棉</OuterMaterial><CountryOfOrigin>cn</CountryOfOrigin><SizeMap>180/100A</SizeMap><RegionOfOrigin>中国</RegionOfOrigin></ClassificationData></Clothing></ProductData></Product></Message><Message><MessageID>9</MessageID><OperationType>Update</OperationType><Product><SKU>26110-lanse-X2L</SKU><Condition><ConditionType>New</ConditionType></Condition><DescriptionData><Title>TestBrand 测试品牌 短袖T恤 26110 兰色 XXL</Title><Brand>TestBrand 测试品牌</Brand><Description>TestCompany全新推出更具潮流气息的短袖POLO衫,时尚简约的款式,考究精致的版型,质感和颜色同时抢眼夺目,让您英姿飒爽,尽显帅气风采</Description><Manufacturer>TestCompany</Manufacturer><RecommendedBrowseNode>215432051</RecommendedBrowseNode><RecommendedBrowseNode>2154531051</RecommendedBrowseNode></DescriptionData><ProductData><Clothing><VariationData><Parentage>child</Parentage><Size>XXL</Size><Color>兰色</Color><VariationTheme>SizeColor</VariationTheme></VariationData><ClassificationData><ClothingType>Shirt</ClothingType><Department>男式</Department><StyleKeywords>花纹</StyleKeywords><ColorMap>兰色</ColorMap><OuterMaterial>棉</OuterMaterial><CountryOfOrigin>cn</CountryOfOrigin><SizeMap>185/104A</SizeMap><RegionOfOrigin>中国</RegionOfOrigin></ClassificationData></Clothing></ProductData></Product></Message></AmazonEnvelope>";

       createFeedDocumentTest(feedData,"POST_PRODUCT_DATA");
   }

   @Test
   public void uploadProImage() throws ApiException, FileNotFoundException {
String feedDate="<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n"
  + "<AmazonEnvelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"amzn-envelope.xsd\">\n"
  + "<Header>\n"
  + "  <DocumentVersion>1.01</DocumentVersion>\n"
  + "  <MerchantIdentifier>A2HWWYO1E71F7i</MerchantIdentifier>\n"
  + "  </Header>\n"
  + "  <MessageType>ProductImage</MessageType>\n"
  + "<Message>\n"
  + "  <MessageID>1</MessageID>\n"
  + "  <OperationType>Update</OperationType>\n"
  + "<ProductImage>\n"
  + "  <SKU>963772741</SKU>\n"
  + "  <ImageType>Main</ImageType>\n"
  + "  <ImageLocation>https://images-na.ssl-images-amazon.com/images/I/71s7HbyqzEL._AC_SY879_.jpg</ImageLocation>\n"
  + "  </ProductImage>\n"
  + "  </Message>\n"

+ "<Message><MessageID>2</MessageID><OperationType>Update</OperationType><ProductImage><SKU>963772741</SKU><ImageType>PT1</ImageType><ImageLocation>https://images-na.ssl-images-amazon.com/images/I/91SJsAkdZDL._AC_SX679_.jpg</ImageLocation></ProductImage></Message>"
+ "<Message><MessageID>3</MessageID><OperationType>Update</OperationType><ProductImage><SKU>963772741</SKU><ImageType>PT2</ImageType><ImageLocation>https://images-na.ssl-images-amazon.com/images/I/81al5VYxKhL._AC_SX679_.jpg</ImageLocation></ProductImage></Message>"
+ "<Message><MessageID>4</MessageID><OperationType>Update</OperationType><ProductImage><SKU>963772741</SKU><ImageType>PT3</ImageType><ImageLocation>https://images-na.ssl-images-amazon.com/images/I/61FSvoJ26uL._AC_SX679_.jpg</ImageLocation></ProductImage></Message>"
+ "<Message><MessageID>5</MessageID><OperationType>Update</OperationType><ProductImage><SKU>963772741</SKU><ImageType>PT4</ImageType><ImageLocation>https://images-na.ssl-images-amazon.com/images/I/81AZNXFSb0S._AC_SX679_.jpg</ImageLocation></ProductImage></Message>"
+ "<Message><MessageID>6</MessageID><OperationType>Update</OperationType><ProductImage><SKU>963772741</SKU><ImageType>PT5</ImageType><ImageLocation>https://images-na.ssl-images-amazon.com/images/I/813wLJGm7ZL._AC_SY879_.jpg</ImageLocation></ProductImage></Message>"
+ "<Message><MessageID>7</MessageID><OperationType>Update</OperationType><ProductImage><SKU>963772741</SKU><ImageType>PT6</ImageType><ImageLocation>https://m.media-amazon.com/images/I/61IfNPsPKxL.jpg</ImageLocation></ProductImage></Message>"
        + "</AmazonEnvelope>";

      // System.out.println(inputStream);
       createFeedDocumentTest(feedDate,"POST_PRODUCT_IMAGE_DATA");
   }

   @Test
   public void updatePrice() throws ApiException {
       String feedData="<?xml version=\"1.0\" ?>\n"
               + "<AmazonEnvelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"amzn-envelope.xsd\">\n"
               + "    <Header>\n"
               + "        <DocumentVersion>1.01</DocumentVersion>\n"
               + "        <MerchantIdentifier>A2HWWYO1E71F7i</MerchantIdentifier>\n"
               + "    </Header>\n"
               + "    <MessageType>Price</MessageType>\n"
               + "    <Message>\n"
               + "        <MessageID>1</MessageID>\n"
               + "\t<OperationType>Update</OperationType>\t\n"
               + "        <Price>\n"
               + "            <SKU>963772741</SKU>\n"
               + "            <StandardPrice currency=\"USD\">19.00</StandardPrice>\n"
               + "\t    <Sale>            \n"
               + "                <StartDate>2021-06-01T00:00:00.000Z</StartDate>\n"
               + "                <EndDate>2021-06-30T00:00:00.000Z</EndDate>\n"
               + "\t\t<SalePrice currency=\"USD\">25.00</SalePrice> \n"
               + "            </Sale>\n"
               + "        </Price>\n"
               + "    </Message>\n"
               + "</AmazonEnvelope>";
       createFeedDocumentTest(feedData,"POST_PRODUCT_PRICING_DATA");
   }

    @Test
    public void updateInventory() throws ApiException {
        String feedData="<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
                + "<AmazonEnvelope xsi:noNamespaceSchemaLocation=\"amzn-envelope.xsd\"\n"
                + "    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n"
                + "    <Header>\n"
                + "        <DocumentVersion>1.01</DocumentVersion>\n"
                + "        <MerchantIdentifier>A2HWWYO1E71F7i</MerchantIdentifier>\n"
                + "    </Header>\n"
                + "    <MessageType>Inventory</MessageType>\n"
                + "    <Message>\n"
                + "        <MessageID>1</MessageID>\n"
                + "        <OperationType>Update</OperationType>\n"
                + "        <Inventory>\n"
                + "            <SKU>963772741</SKU>\n"
                + "            <Quantity>50</Quantity>\n"
                + "            <SwitchFulfillmentTo>MFN</SwitchFulfillmentTo>\n"
                + "        </Inventory>\n"
                + "    </Message>\n"
                + "    <Message>\n"
                + "        <MessageID>2</MessageID>\n"
                + "        <OperationType>Update</OperationType>\n"
                + "        <Inventory>\n"
                + "            <SKU>TestSKU-XRJ-2Pcs-171228M-bk-mA</SKU>\n"
                + "            <Quantity>50</Quantity>\n"
                + "            <SwitchFulfillmentTo>MFN</SwitchFulfillmentTo>\n"
                + "        </Inventory>\n"
                + "    </Message>\n"
                + "    <Message>\n"
                + "        <MessageID>3</MessageID>\n"
                + "        <OperationType>Update</OperationType>\n"
                + "        <Inventory>\n"
                + "            <SKU>TestSKU-XRJ-2Pcs-171228B-bk-mA</SKU>\n"
                + "            <Quantity>50</Quantity>\n"
                + "            <SwitchFulfillmentTo>MFN</SwitchFulfillmentTo>\n"
                + "        </Inventory>\n"
                + "    </Message>    \n"
                + "</AmazonEnvelope>";
        createFeedDocumentTest(feedData,"POST_INVENTORY_AVAILABILITY_DATA");
    }



    @Test
    public void uploadPackFile() throws IOException, ApiException {
        var inputStream=new FileInputStream("D:\\Soft\\Tencent\\QiDianDocument\\2885018758\\FileRecv\\Flat.File.OrderCancellation._TTH_-DWUS.xls");
        var bytes=toByteArray(inputStream);
        createFeedDocumentTest(bytes,"POST_FLAT_FILE_ORDER_ACKNOWLEDGEMENT_DATA");
     //   createFeedDocumentTest(inputStream,"POST_FLAT_FILE_ORDER_ACKNOWLEDGEMENT_DATA");
    }

    /**
    * Listing上传
    * @author AmteMa
    * @date 2023/4/13
    */
    @Test
    public void uploadPackFile2() throws IOException, ApiException {
        var inputStream=new FileInputStream("D:\\AdsReport\\Schrank-Unterbauleuchten.xlsm");
        var bytes=toByteArray(inputStream);
        createFeedDocumentTest(bytes,"POST_FLAT_FILE_LISTINGS_DATA");
    }
    @Test
    public void uploadPackInfoFile() throws IOException, ApiException {

        var inputStream=new FileInputStream("D:\\AdsReport\\Schrank-Unterbauleuchten.xlsm");
        var bytes=toByteArray(inputStream);
        createFeedDocumentTest(bytes,"POST_FLAT_FILE_FROM_EXCEL_FBA_CREATE_CARTON_INFO");
    }


    //POST_FLAT_FILE_FROM_EXCEL_FBA_CREATE_CARTON_INFO


    private byte[] toByteArray(InputStream in) throws IOException {

        ByteArrayOutputStream out = new ByteArrayOutputStream();
        byte[] buffer = new byte[1024 * 4];
        int n = 0;
        while ((n = in.read(buffer)) != -1) {
            out.write(buffer, 0, n);
        }
        return out.toByteArray();
    }
    /**
     * 1.为您指定的订阅源类型创建订阅源文档。 此操作返回用于加密文档内容的加密详细信息，以及用于上传加密提要文档内容的预签名 URL。
     * 它还返回一个 feedDocumentId 值，您可以在随后调用 createFeed 操作时传入该值。
     * **使用计划：** | 速率（每秒请求数）| 爆裂|
     * | ---- | ---- | | 0.0083 | 15 |
     * 有关更多信息，请参阅“使用计划和速率限制”。 在销售合作伙伴 API 文档中。*
     * @throws ApiException
     *          if the Api call fails
     */
    //@Test
    public void createFeedDocumentTest(String feedData,String feedType) throws ApiException {
        CreateFeedDocumentSpecification body = new CreateFeedDocumentSpecification();
        body.contentType("text/xml; charset=UTF-8");
        CreateFeedDocumentResponse response = api.createFeedDocument(body);
        System.out.println(response);
        // TODO: test validations



        //2.上传
        String contentType = String.format("text/xml; charset=%s", StandardCharsets.UTF_8);
        UploadDocument upload=new UploadDocument();
       var res= upload.uploadV2(feedData.getBytes(StandardCharsets.UTF_8),response.getUrl(),contentType);
        if (res!=null){
            //3.创建
        createFeedTest(response.getFeedDocumentId(),feedType);
        }
    }

    public void createFeedDocumentTest(byte[]  feedData,String feedType) throws ApiException {
        String contentType="application/vnd.ms-excel";
        CreateFeedDocumentSpecification body = new CreateFeedDocumentSpecification();
        body.contentType(contentType);
        CreateFeedDocumentResponse response = api.createFeedDocument(body);
        System.out.println(response);
        // TODO: test validations



        //2.上传

        UploadDocument upload=new UploadDocument();
        var res= upload.uploadV2(feedData,
                response.getUrl(),contentType
        );
        if (res!=null){
            //3.创建
            createFeedTest( response.getFeedDocumentId(),feedType);
        }
    }

    @Test
    public void createFeedDocumentTest() throws ApiException {
        String contentType="application/vnd.ms-excel";
        CreateFeedDocumentSpecification body = new CreateFeedDocumentSpecification();
        body.contentType(contentType);
        CreateFeedDocumentResponse response = api.createFeedDocument(body);
        System.out.println(response);
    }
    @Test
    public void createFeedTest() throws ApiException {
        createFeedTest( "amzn1.tortuga.3.63fb461c-1f0b-4983-b5ac-52567955de36.TYSKTUZZJMUV8","POST_FLAT_FILE_FROM_EXCEL_FBA_CREATE_CARTON_INFO");
    }

    public void createFeedTest(String docId,String feedType) throws ApiException {
        CreateFeedSpecification body = new CreateFeedSpecification();
        body.marketplaceIds(Arrays.asList("marketplaceId"));
        body.feedType(feedType);
        body.inputFeedDocumentId(docId);
        CreateFeedResponse response = api.createFeed(body);
        System.out.println(response);
        // TODO: test validations
    }

    @Test
    public void createEASYSHIPTest() throws ApiException {
        CreateFeedDocumentSpecification body = new CreateFeedDocumentSpecification();
        body.contentType("text/xml; charset=UTF-8");
        CreateFeedDocumentResponse response = api.createFeedDocument(body);
        System.out.println(response);
       // createFeedTest( response.getPayload().getFeedDocumentId(),"POST_EASYSHIP_DOCUMENTS");
    }

    /**
     * 5.返回您指定的提要的提要详细信息（包括 resultDocumentId，如果可用）。
     * **使用计划：** | 速率（每秒请求数）| 爆裂|
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFeedTest() throws ApiException {
        String feedId = "843529019597";
        Feed feed = api.getFeed(feedId);
        System.out.println(feed);

    }

    /**
     * 6.返回检索提要文档内容所需的信息。 这包括提要文档的预签名 URL 以及解密文档内容所需的信息。
     * **使用计划：** | 速率（每秒请求数）| 爆裂|
     * | ---- | ---- | | 0.0222 | 10 |
     * 有关更多信息，请参阅“使用计划和速率限制”。 在销售合作伙伴 API 文档中。
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFeedDocumentTest() throws ApiException, IOException {
        String feedDocumentId = "amzn1.tortuga.4.fe.240de81b-4f6d-4772-8577-1edd92a8c240.T3AR0GZEF9N04R";
        var response =
                api.getFeedByDocumentId(feedDocumentId);
                //api.getFeedDocument(feedDocumentId);
        System.out.println(response);
        System.out.println(api.getFeedDocument(feedDocumentId));
        // TODO: test validations

    }

    /**
     *
     *
     * Returns feed details for the feeds that match the filters that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 0.0222 | 10 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFeedsTest() throws ApiException {
        List<String> feedTypes = Arrays.asList("POST_FLAT_FILE_LISTINGS_DATA");
        List<String> marketplaceIds = Arrays.asList("marketplaceId");
        Integer pageSize = 100;
        List<String> processingStatuses =Arrays.asList("FATAL");
        var d = LocalDate.now();
        var startTime = org.threeten.bp.OffsetDateTime.of(d.getYear(), d.getMonthValue(), 28, 0, 0, 0, 0, org.threeten.bp.ZoneOffset.ofHours(0));
        OffsetDateTime createdSince = startTime;
        OffsetDateTime createdUntil = org.threeten.bp.OffsetDateTime.now();
        String nextToken = null;
        com.amazon.spapi.model.feeds.GetFeedsResponse response = api.getFeeds(feedTypes, marketplaceIds, pageSize, processingStatuses, createdSince, createdUntil, nextToken);
        System.out.println(response);

        // TODO: test validations
    }

    @Test
    public void cancelFeedTest() throws ApiException {
        String feedId = null;
         api.cancelFeed(feedId);

        // TODO: test validations
    }

}
